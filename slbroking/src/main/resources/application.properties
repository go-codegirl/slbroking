#spring.datasource.url=jdbc:mysql://568224120c1e666beb000046-poplar5.rhcloud.com:37996/telosws?autoReconnect=true
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/slbroking?autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.driver-class-name=com.mysql.jdbc.Driver

##server.port=9000

spring.mail.protocol=smtp
spring.mail.smtp.host=smtp.zoho.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=587
spring.mail.from=support@safetyleaf.com
spring.mail.username=support@safetyleaf.com
spring.mail.password=!2SafetyLeaf
mail.smtp.starttls.enable=true

flyway.baseline-on-migrate=true

spring.jooq.sql-dialect=MYSQL

app.BaseUrl=http://localhost:8080
#app.BaseUrl=http://slbroking-poplar6.rhcloud.com
app.claimsUrl=https://track.medibuddy.in/api/TrackClaimWithEmpDetails.json
app.ecardUrl=https://track-api-lb.medibuddy.in/getEcardWithEmpDetails.json
app.ecardForDependentsUrl=https://track-api-lb.medibuddy.in/getEcardFamilyWithMAID.json

######Google mail OAuth2 credentials
google.p12.path=safetyleaf-email-5f40cd515b94.p12
google.serviceAccount.id=safetyleaf@safetyleaf-email.iam.gserviceaccount.com
google.originMailAddress=info@safetyleaf.com

######Amazon s3 cloud credentials
S3_ACCESS_KEY = AKIAJHZ3VRBDDKGKDMOQ
S3_SECRET_KEY = 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

GET_USER_SQL = select id,team from account where username = :username and password = :password

GET_CLIENT_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, \
date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' \
AND INSURED_NAME LIKE '%' :clientName '%'

GET_VEHICLE_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, \
date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND VEHICLE_NO \
LIKE '%' :vehicleNumber '%'


GET_START_DATE_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND INSURANCE_FROM LIKE '%' :startDate '%'

GET_POLICY_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND POLICY_CERTIFICATE_NO LIKE '%' :policyNumber '%'


GET_PHONE_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND PHONE_NO LIKE '%' :phoneNumber '%'


GET_EMAIL_ID_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND EMAIL LIKE '%' :emailId '%'


GET_SERIAL_NUM_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where date(COLLECTION_DATE) != '0014-01-03' AND id = :id


GET_ALL_EMAIL_IDS_SQL	= select id, INSURED_NAME, PHONE_NO, SECONDARY_PHONE_NO, date(DOB) DOB , COMPANY, EMAIL, SECONDARY_EMAIL, GENDER, INDUSTRY, INSURED_ADDRESS, \
POLICY_CERTIFICATE_NO, ENDORS_NO, date(INSURANCE_FROM) INSURANCE_FROM , date(INSURANCE_TO) INSURANCE_TO, COMPANY_NAME, BRANCH_NAME, OFFICE_CODE, SOURCE, DEPARTMENT, \
PREMIUM_AMOUNT, TERRORISM_PREMIUM, SERVICE_TAX_PERCENTAGE, SERVICE_TAX, TOTAL_PREMIUM, COMMISSION_RATE, COMMISSION_AMOUNT, VEHICLE_NO, IDV, VEHICLE_MAKE, date(YEAR_OF_MANUFACTURING) YEAR_OF_MANUFACTURING , NCB_PERCENTAGE, \
POLICY_TYPE,  ID_CARD, DESPATCH_DATE, SPECIFIC_POLICY, OPEN_POLICY, OPEN_COVER, OTHERS, VOYAGE_FROM, VOYAGE_TO, BASIC_RATE, EARTHQUAKE_PREMIUM, ADDITIONAL_PERILS_PREMIUM, \
SUM_INSURED, COLLECTION_DATE, AGENTNAME, POLICY_DETAILS, RENEWAL_AMOUNT, RENEWAL_COMPANY from test_prefixTELOS where INSURANCE_FROM > '2014-04-01' and CREATED_ON > '2014-04-01' \
and EMAIL is not null group by EMAIL


GET_DOCUMENTS = select S.id,S.name,S.scanned,S.description from scan_email SE join scan S on SE.SCAN_ID = S.ID where SE.CLIENT_ID =:clientId


CREATE_EMAIL_LOG = INSERT INTO email(address, client_id, message, user_id) VALUES(:address, :clientId, :message, :userId)


TYPES_OF_POLICIES = SELECT count(*) Number,DEPARTMENT,YEAR(INSURANCE_FROM) years \
from test_prefixTELOS where YEAR(INSURANCE_FROM) in (:fromYear,IFNULL(:toYear,:fromYear)) \
and DEPARTMENT is not null group by DEPARTMENT,YEAR(INSURANCE_FROM) order by years,DEPARTMENT


TYPES_OF_POLICIES_MONTH =  SELECT count(*) Number,DEPARTMENT,YEAR(INSURANCE_FROM) years \
from test_prefixTELOS where YEAR(INSURANCE_FROM) in (:fromYear,IFNULL(:toYear,:fromYear))  and MONTH(INSURANCE_FROM) = :month \
and DEPARTMENT is not null group by DEPARTMENT,YEAR(INSURANCE_FROM) order by years,DEPARTMENT
