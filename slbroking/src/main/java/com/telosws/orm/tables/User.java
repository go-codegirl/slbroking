/**
 * This class is generated by jOOQ
 */
package com.telosws.orm.tables;


import com.telosws.orm.Keys;
import com.telosws.orm.Slbroking;
import com.telosws.orm.tables.records.UserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

	private static final long serialVersionUID = 1798040271;

	/**
	 * The reference instance of <code>slbroking.user</code>
	 */
	public static final User USER = new User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRecord> getRecordType() {
		return UserRecord.class;
	}

	/**
	 * The column <code>slbroking.user.ID</code>. The PRIMARY AUTO INCREMENT identifier
	 */
	public final TableField<UserRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "The PRIMARY AUTO INCREMENT identifier");

	/**
	 * The column <code>slbroking.user.FIRST_NAME</code>. The FirstName/GivenName of the registred user
	 */
	public final TableField<UserRecord, String> FIRST_NAME = createField("FIRST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "The FirstName/GivenName of the registred user");

	/**
	 * The column <code>slbroking.user.MIDDLE_NAME</code>. The MiddleName/Initials of the registred user
	 */
	public final TableField<UserRecord, String> MIDDLE_NAME = createField("MIDDLE_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "The MiddleName/Initials of the registred user");

	/**
	 * The column <code>slbroking.user.LAST_NAME</code>. The LastName/SurName of the registred user
	 */
	public final TableField<UserRecord, String> LAST_NAME = createField("LAST_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "The LastName/SurName of the registred user");

	/**
	 * The column <code>slbroking.user.PASSWORD</code>. The encrypted password of the registred user
	 */
	public final TableField<UserRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.VARCHAR.length(512).nullable(false), this, "The encrypted password of the registred user");

	/**
	 * The column <code>slbroking.user.ROLE</code>. The role of registred user - EMP or HR
	 */
	public final TableField<UserRecord, String> ROLE = createField("ROLE", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "The role of registred user - EMP or HR");

	/**
	 * The column <code>slbroking.user.PRIMARY_EMAIL</code>. The primary email address of this registred user
	 */
	public final TableField<UserRecord, String> PRIMARY_EMAIL = createField("PRIMARY_EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "The primary email address of this registred user");

	/**
	 * The column <code>slbroking.user.PRIMARY_PHONE</code>. The primary phone number of this registred user
	 */
	public final TableField<UserRecord, String> PRIMARY_PHONE = createField("PRIMARY_PHONE", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "The primary phone number of this registred user");

	/**
	 * The column <code>slbroking.user.STATUS</code>. The status of this registred user
	 */
	public final TableField<UserRecord, String> STATUS = createField("STATUS", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false).defaulted(true), this, "The status of this registred user");

	/**
	 * The column <code>slbroking.user.CREATED_ON</code>. The datetime when record was created
	 */
	public final TableField<UserRecord, Timestamp> CREATED_ON = createField("CREATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "The datetime when record was created");

	/**
	 * The column <code>slbroking.user.UPDATED_ON</code>. The datetime when record was updated
	 */
	public final TableField<UserRecord, Timestamp> UPDATED_ON = createField("UPDATED_ON", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "The datetime when record was updated");

	/**
	 * The column <code>slbroking.user.COMMENTS</code>.
	 */
	public final TableField<UserRecord, String> COMMENTS = createField("COMMENTS", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

	/**
	 * The column <code>slbroking.user.company_id</code>.
	 */
	public final TableField<UserRecord, Integer> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>slbroking.user</code> table reference
	 */
	public User() {
		this("user", null);
	}

	/**
	 * Create an aliased <code>slbroking.user</code> table reference
	 */
	public User(String alias) {
		this(alias, USER);
	}

	private User(String alias, Table<UserRecord> aliased) {
		this(alias, aliased, null);
	}

	private User(String alias, Table<UserRecord> aliased, Field<?>[] parameters) {
		super(alias, Slbroking.SLBROKING, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UserRecord, Integer> getIdentity() {
		return Keys.IDENTITY_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRecord> getPrimaryKey() {
		return Keys.KEY_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY, Keys.KEY_USER_PRIMARY_EMAIL_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public User as(String alias) {
		return new User(alias, this);
	}

	/**
	 * Rename this table
	 */
	public User rename(String name) {
		return new User(name, null);
	}
}
