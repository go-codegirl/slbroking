/**
 * This class is generated by jOOQ
 */
package com.telosws.orm.tables;


import com.telosws.orm.Keys;
import com.telosws.orm.Slbroking;
import com.telosws.orm.tables.records.AddressRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * it holds the address details of insureds
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address extends TableImpl<AddressRecord> {

	private static final long serialVersionUID = 1131406189;

	/**
	 * The reference instance of <code>slbroking.address</code>
	 */
	public static final Address ADDRESS = new Address();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AddressRecord> getRecordType() {
		return AddressRecord.class;
	}

	/**
	 * The column <code>slbroking.address.Address_ID</code>.
	 */
	public final TableField<AddressRecord, Integer> ADDRESS_ID = createField("Address_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.Address</code>.
	 */
	public final TableField<AddressRecord, String> ADDRESS_ = createField("Address", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.Address_Line_1</code>.
	 */
	public final TableField<AddressRecord, String> ADDRESS_LINE_1 = createField("Address_Line_1", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.Address_Line_2</code>.
	 */
	public final TableField<AddressRecord, String> ADDRESS_LINE_2 = createField("Address_Line_2", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>slbroking.address.City</code>.
	 */
	public final TableField<AddressRecord, String> CITY = createField("City", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.State</code>.
	 */
	public final TableField<AddressRecord, String> STATE = createField("State", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.Zip_Postal_Code</code>.
	 */
	public final TableField<AddressRecord, String> ZIP_POSTAL_CODE = createField("Zip_Postal_Code", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.address.Country</code>.
	 */
	public final TableField<AddressRecord, String> COUNTRY = createField("Country", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>slbroking.address</code> table reference
	 */
	public Address() {
		this("address", null);
	}

	/**
	 * Create an aliased <code>slbroking.address</code> table reference
	 */
	public Address(String alias) {
		this(alias, ADDRESS);
	}

	private Address(String alias, Table<AddressRecord> aliased) {
		this(alias, aliased, null);
	}

	private Address(String alias, Table<AddressRecord> aliased, Field<?>[] parameters) {
		super(alias, Slbroking.SLBROKING, aliased, parameters, "it holds the address details of insureds");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AddressRecord, Integer> getIdentity() {
		return Keys.IDENTITY_ADDRESS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AddressRecord> getPrimaryKey() {
		return Keys.KEY_ADDRESS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AddressRecord>> getKeys() {
		return Arrays.<UniqueKey<AddressRecord>>asList(Keys.KEY_ADDRESS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Address as(String alias) {
		return new Address(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Address rename(String name) {
		return new Address(name, null);
	}
}
