/**
 * This class is generated by jOOQ
 */
package com.telosws.orm.tables;


import com.telosws.orm.Keys;
import com.telosws.orm.Slbroking;
import com.telosws.orm.tables.records.PersonalDetailsRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * its holds personal details of insured
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalDetails extends TableImpl<PersonalDetailsRecord> {

	private static final long serialVersionUID = -1913218184;

	/**
	 * The reference instance of <code>slbroking.personal_details</code>
	 */
	public static final PersonalDetails PERSONAL_DETAILS = new PersonalDetails();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PersonalDetailsRecord> getRecordType() {
		return PersonalDetailsRecord.class;
	}

	/**
	 * The column <code>slbroking.personal_details.Personal_ID</code>.
	 */
	public final TableField<PersonalDetailsRecord, Integer> PERSONAL_ID = createField("Personal_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.personal_details.Industry</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> INDUSTRY = createField("Industry", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.personal_details.Name_Of_Individual</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> NAME_OF_INDIVIDUAL = createField("Name_Of_Individual", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>slbroking.personal_details.Name_of_Company</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> NAME_OF_COMPANY = createField("Name_of_Company", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>slbroking.personal_details.Phone_Number</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> PHONE_NUMBER = createField("Phone_Number", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>slbroking.personal_details.Secondary_Number</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> SECONDARY_NUMBER = createField("Secondary_Number", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>slbroking.personal_details.Email_Address</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> EMAIL_ADDRESS = createField("Email_Address", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.personal_details.Secondray_Email_Address</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> SECONDRAY_EMAIL_ADDRESS = createField("Secondray_Email_Address", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>slbroking.personal_details.Date_of_Birth</code>.
	 */
	public final TableField<PersonalDetailsRecord, Date> DATE_OF_BIRTH = createField("Date_of_Birth", org.jooq.impl.SQLDataType.DATE, this, "");

	/**
	 * The column <code>slbroking.personal_details.Gender</code>.
	 */
	public final TableField<PersonalDetailsRecord, String> GENDER = createField("Gender", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>slbroking.personal_details.Address_ID</code>.
	 */
	public final TableField<PersonalDetailsRecord, Integer> ADDRESS_ID = createField("Address_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>slbroking.personal_details</code> table reference
	 */
	public PersonalDetails() {
		this("personal_details", null);
	}

	/**
	 * Create an aliased <code>slbroking.personal_details</code> table reference
	 */
	public PersonalDetails(String alias) {
		this(alias, PERSONAL_DETAILS);
	}

	private PersonalDetails(String alias, Table<PersonalDetailsRecord> aliased) {
		this(alias, aliased, null);
	}

	private PersonalDetails(String alias, Table<PersonalDetailsRecord> aliased, Field<?>[] parameters) {
		super(alias, Slbroking.SLBROKING, aliased, parameters, "its holds personal details of insured");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PersonalDetailsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_PERSONAL_DETAILS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PersonalDetailsRecord> getPrimaryKey() {
		return Keys.KEY_PERSONAL_DETAILS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PersonalDetailsRecord>> getKeys() {
		return Arrays.<UniqueKey<PersonalDetailsRecord>>asList(Keys.KEY_PERSONAL_DETAILS_PRIMARY, Keys.KEY_PERSONAL_DETAILS_PHONE_NUMBER, Keys.KEY_PERSONAL_DETAILS_EMAIL_ADDRESS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PersonalDetailsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PersonalDetailsRecord, ?>>asList(Keys.ADDRESS_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonalDetails as(String alias) {
		return new PersonalDetails(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PersonalDetails rename(String name) {
		return new PersonalDetails(name, null);
	}
}
