/**
 * This class is generated by jOOQ
 */
package com.telosws.orm.tables;


import com.telosws.orm.Keys;
import com.telosws.orm.Slbroking;
import com.telosws.orm.tables.records.PolicyTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyType extends TableImpl<PolicyTypeRecord> {

	private static final long serialVersionUID = 331162403;

	/**
	 * The reference instance of <code>slbroking.policy_type</code>
	 */
	public static final PolicyType POLICY_TYPE = new PolicyType();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PolicyTypeRecord> getRecordType() {
		return PolicyTypeRecord.class;
	}

	/**
	 * The column <code>slbroking.policy_type.policy_type_id</code>.
	 */
	public final TableField<PolicyTypeRecord, Integer> POLICY_TYPE_ID = createField("policy_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_type.policy_type_name</code>.
	 */
	public final TableField<PolicyTypeRecord, String> POLICY_TYPE_NAME = createField("policy_type_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>slbroking.policy_type</code> table reference
	 */
	public PolicyType() {
		this("policy_type", null);
	}

	/**
	 * Create an aliased <code>slbroking.policy_type</code> table reference
	 */
	public PolicyType(String alias) {
		this(alias, POLICY_TYPE);
	}

	private PolicyType(String alias, Table<PolicyTypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private PolicyType(String alias, Table<PolicyTypeRecord> aliased, Field<?>[] parameters) {
		super(alias, Slbroking.SLBROKING, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PolicyTypeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_POLICY_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PolicyTypeRecord> getPrimaryKey() {
		return Keys.KEY_POLICY_TYPE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PolicyTypeRecord>> getKeys() {
		return Arrays.<UniqueKey<PolicyTypeRecord>>asList(Keys.KEY_POLICY_TYPE_PRIMARY, Keys.KEY_POLICY_TYPE_POLICY_TYPE_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PolicyType as(String alias) {
		return new PolicyType(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PolicyType rename(String name) {
		return new PolicyType(name, null);
	}
}
