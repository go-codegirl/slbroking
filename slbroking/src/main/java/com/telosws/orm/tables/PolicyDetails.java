/**
 * This class is generated by jOOQ
 */
package com.telosws.orm.tables;


import com.telosws.orm.Keys;
import com.telosws.orm.Slbroking;
import com.telosws.orm.tables.records.PolicyDetailsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * its policy details of insured
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PolicyDetails extends TableImpl<PolicyDetailsRecord> {

	private static final long serialVersionUID = -1206225551;

	/**
	 * The reference instance of <code>slbroking.policy_details</code>
	 */
	public static final PolicyDetails POLICY_DETAILS = new PolicyDetails();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PolicyDetailsRecord> getRecordType() {
		return PolicyDetailsRecord.class;
	}

	/**
	 * The column <code>slbroking.policy_details.Policy_ID</code>.
	 */
	public final TableField<PolicyDetailsRecord, Integer> POLICY_ID = createField("Policy_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.Insurance_Type</code>.
	 */
	public final TableField<PolicyDetailsRecord, String> INSURANCE_TYPE = createField("Insurance_Type", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.Product_Name</code>.
	 */
	public final TableField<PolicyDetailsRecord, String> PRODUCT_NAME = createField("Product_Name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.Policy_Details</code>.
	 */
	public final TableField<PolicyDetailsRecord, String> POLICY_DETAILS_ = createField("Policy_Details", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.Person_Details_ID</code>.
	 */
	public final TableField<PolicyDetailsRecord, Integer> PERSON_DETAILS_ID = createField("Person_Details_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.Policy_Type_Id</code>.
	 */
	public final TableField<PolicyDetailsRecord, Integer> POLICY_TYPE_ID = createField("Policy_Type_Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>slbroking.policy_details.P_Number</code>.
	 */
	public final TableField<PolicyDetailsRecord, String> P_NUMBER = createField("P_Number", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * Create a <code>slbroking.policy_details</code> table reference
	 */
	public PolicyDetails() {
		this("policy_details", null);
	}

	/**
	 * Create an aliased <code>slbroking.policy_details</code> table reference
	 */
	public PolicyDetails(String alias) {
		this(alias, POLICY_DETAILS);
	}

	private PolicyDetails(String alias, Table<PolicyDetailsRecord> aliased) {
		this(alias, aliased, null);
	}

	private PolicyDetails(String alias, Table<PolicyDetailsRecord> aliased, Field<?>[] parameters) {
		super(alias, Slbroking.SLBROKING, aliased, parameters, "its policy details of insured");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<PolicyDetailsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_POLICY_DETAILS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PolicyDetailsRecord> getPrimaryKey() {
		return Keys.KEY_POLICY_DETAILS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PolicyDetailsRecord>> getKeys() {
		return Arrays.<UniqueKey<PolicyDetailsRecord>>asList(Keys.KEY_POLICY_DETAILS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PolicyDetailsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PolicyDetailsRecord, ?>>asList(Keys.PERSAONLID, Keys.POLICY_TYPE_ID_FK, Keys.P_NUMBER_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PolicyDetails as(String alias) {
		return new PolicyDetails(alias, this);
	}

	/**
	 * Rename this table
	 */
	public PolicyDetails rename(String name) {
		return new PolicyDetails(name, null);
	}
}
