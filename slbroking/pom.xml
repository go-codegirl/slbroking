<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.telosws.broking</groupId>
	<artifactId>slbroking</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>slbroking</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<prerequisites>
		<maven>3</maven>
	</prerequisites>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>codelds</id>
			<url>https://code.lds.org/nexus/content/groups/main-repo</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>eap</id>
			<url>http://maven.repository.redhat.com/techpreview/all</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<start-class>com.telosws.broking.TeloswsBrokingApplication</start-class>
		<java.version>1.8</java.version>
		<tomcat.version>7.0.52</tomcat.version>
	</properties>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>timer</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.2-1003-jdbc4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.25</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-ws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>4.1.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.156</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.10-FINAL</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.9.39</version>
		</dependency>
		<dependency>
			<groupId>com.google.apis</groupId>
			<artifactId>google-api-services-gmail</artifactId>
			<version>v1-rev32-1.20.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jmimemagic/jmimemagic -->
		<dependency>
		    <groupId>jmimemagic</groupId>
		    <artifactId>jmimemagic</artifactId>
		    <version>0.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.spring</groupId>
			<artifactId>spring-vaadin-eventbus</artifactId>
			<version>0.0.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>vaadin-grid-util</artifactId>
			<version>1.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<!-- velocity -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>2.0</version>
		</dependency>
		<!--flyway -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-maven-plugin</artifactId>
			<version>3.2.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-nop</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
			<version>1.3.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>3.7.3</version>
		</dependency>
		<dependency>
		   <groupId>org.vaadin</groupId>
		   <artifactId>viritin</artifactId>
		   <version>1.49</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf.tool</groupId>
			<artifactId>xmlworker</artifactId>
			<version>5.4.2</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jtidy</groupId>
			<artifactId>jtidy</artifactId>
			<version>r938</version>
		</dependency>

		<!--<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>core-renderer</artifactId>
			<version>R8pre2</version>
		</dependency>-->

		<dependency>
			<groupId>org.xhtmlrenderer</groupId>
			<artifactId>flying-saucer-pdf-itext5</artifactId>
			<version>9.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160810</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.zybnet/vaadin-autocomplete -->
		<dependency>
		    <groupId>com.zybnet</groupId>
		    <artifactId>vaadin-autocomplete</artifactId>
		    <version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>2.11.0</version>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>7.5.7</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<profiles>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'webapps' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<properties>
				<environment>openshift</environment>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<finalName>broking</finalName>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<version>3.2.1</version>
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>jdbc:mysql://${OPENSHIFT_MYSQL_DB_HOST}:${OPENSHIFT_MYSQL_DB_PORT}/${OPENSHIFT_APP_NAME}</url> <!-- fix: jdbc:mysql://localhost:3306/dba -->
							<user>${OPENSHIFT_MYSQL_DB_USERNAME}</user>
							<password>${OPENSHIFT_MYSQL_DB_PASSWORD}</password>
							<schemas>
								<schema>slbroking</schema>
							</schemas>
							<initOnMigrate>true</initOnMigrate>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.3</version>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app
				will need. -->
			<!-- By default that is to put the resulting archive into the 'webapps'
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Default spring profile to use -->
				<!--<spring.profiles.active>dev</spring.profiles.active>-->
				<!-- Default environment -->
				<environment>develop</environment>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-jetty</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>

			<build>
				<finalName>broking</finalName>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>webapps</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>

					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
						<version>7.5.7</version>
						<configuration>
							<extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>

							<!-- We are doing "inplace" gwt compilation but into subdir VAADIN/widgetsets -->
							<webappDirectory>src/main/resources/VAADIN/widgetsets
							</webappDirectory>
							<hostedWebapp>src/main/resources/VAADIN/widgetsets
							</hostedWebapp>
							<noServer>true</noServer>
							<!-- Remove draftCompile when project is ready -->
							<draftCompile>true</draftCompile>
							<persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>
							<compileReport>false</compileReport>
							<style>OBF</style>
							<strict>true</strict>
							<!-- Symbol maps etc, not needed in vaadin app, just target them outside
								war -->
							<deploy>${project.build.directory}/gwt-deploy</deploy>
						</configuration>
						<executions>
							<execution>
								<configuration>
									<!-- if you don't specify any modules, the plugin will find them -->
									<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
										</modules> -->
								</configuration>
								<goals>
									<goal>clean</goal>
									<goal>resources</goal>
									<!-- These are non functional currently with spring boot directory
										structure <goal>update-theme</goal> <goal>compile-theme</goal> -->
									<goal>update-widgetset</goal>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<!-- ensure fresly compiled widgetset to jar, TODO check vaadin plugin
								configuration could get rid of this -->
							<execution>
								<id>copy-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/main/resources/VAADIN</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-maven-plugin</artifactId>
						<version>3.2.1</version>
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>jdbc:mysql://127.0.0.1:3306</url> <!-- fix: jdbc:mysql://localhost:3306/dba -->
							<user>root</user>
							<password>root</password>
							<schemas>
								<schema>slbroking</schema>
							</schemas>
							<initOnMigrate>true</initOnMigrate>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						<version>3.7.2</version>

						<executions>
							<!-- Generate the required class from the database -->
							<execution>
								<id>generate-mysql</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>

						<dependencies>
							<!--
                                Because we use the H2 database, we have to add it as the dependency
                                of this plugin.
                            -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.25</version>
							</dependency>

						</dependencies>

						<configuration>
							<!-- Configure the database connection -->
							<jdbc>
								<driver>com.mysql.jdbc.Driver</driver>
								<url>jdbc:mysql://127.0.0.1:3306/slbroking</url>
								<user>root</user>
								<password>root</password>
							</jdbc>

							<generator>
								<database>
									<!-- Configure the used database dialect -->
									<name>org.jooq.util.mysql.MySQLDatabase</name>
									<!-- Include all tables found from the PUBLIC schema -->
									<includes>.*</includes>
									<excludes></excludes>
									<inputSchema>slbroking</inputSchema>
								</database>
								<!-- Generate classes for tables and records -->
								<generate>
									<deprecated>false</deprecated>
									<instanceFields>true</instanceFields>
									<pojos>true</pojos>
								</generate>
								<!-- Configure the target package and directory -->
								<target>
									<packageName>com.telosws.orm</packageName>
									<directory>${basedir}/src/main/java</directory>
								</target>
							</generator>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
